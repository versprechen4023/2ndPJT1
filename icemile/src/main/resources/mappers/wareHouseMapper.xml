<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="mes.icemile.mappers.wareHouseMapper">
  
<!--   창고 리스트 가져오기 -->
  <select id="houseList" resultType="ems.icemile.dto.WareHouseDTO">
  SELECT *
  FROM warehouse 
  </select>
<!--   창고 리스트 가져오기 -->

<!-- 창고 추가 시 코드값 가져가기 -->
  <select id="getWhCode" resultType="String">
		SELECT wh_code 
		FROM warehouse 
		ORDER BY wh_code desc limit 1
  </select>
<!-- 창고 추가 시 코드값 가져가기 -->

<!-- 창고 등록(추가) -->
<!-- 	인서트 id는 동일하게 DAO에서 호출하는부분이랑 동일하게해야합니다 houseInsert로수정 -->
<!-- wh_loacation 오타를 wh_location으로 수정했습니다 -->
	<insert id="houseInsert">
		INSERT INTO warehouse (wh_code, wh_name, wh_type, wh_location, wh_phone, wh_status, prod_code, 
		                       raw_code, emp_num, wh_note)
		VALUES (#{wh_code}, #{wh_name}, #{wh_type}, #{wh_location}, #{wh_phone}, #{wh_status}, 
				#{prod_code}, #{raw_code},#{emp_num},#{wh_note})
	</insert>
<!-- 창고 등록(추가) -->


<!-- 창고 코드 중복 검사 -->
<select id="searchwhcode" resultType="java.lang.String">
 	SELECT *
 	FROM
 	WHERE wh_code = #{wh_code}
 </select>
<!-- 창고 코드 중복 검사 -->


<!-- 창고 수정 -->
<update id="whUpdate">
  UPDATE
  		<choose>
    		<when test='type == "P"'>
      		warehouse SET wh_name = #{wh_name}, wh_type = #{wh_type}, wh_location = #{wh_location},
      					wh_phone = #{wh_phone}, wh_status = #{wh_status}, prod_code = #{prod_code},
      					raw_code = #{raw_code}, emp_num = #{emp_num}, wh_note = #{wh_note}
      				WHERE wh_code = #{wh_code}
    		</when>
    		<when test='type == "R"'>
    		warehouse SET wh_name = #{wh_name}, wh_type = #{wh_type}, wh_location = #{wh_location},
      					wh_phone = #{wh_phone}, wh_status = #{wh_status}, prod_code = #{prod_code},
      					raw_code = #{raw_code}, emp_num = #{emp_num}, wh_note = #{wh_note}
      				WHERE wh_code = #{wh_code}
      		
    		</when>
  		</choose>
  </update>
<!-- 창고 수정 -->

<!-- 창고 코드 자동 부여 -->
 <select id="getNewwhId" resultType="java.lang.String">
  	SELECT
  		<choose>
    		<when test='type == "P"'>
    		wh_code
      			FROM warehouse
                where wh_code LIKE '%P%'
                ORDER BY wh_code desc
    		</when>
    		<when test='type == "R"'>
    		wh_code
      			FROM warehouse
      			where wh_code LIKE '%R%'
      			ORDER BY wh_code desc
    		</when>
  		</choose>
  		LIMIT 1
  </select>
<!-- 창고 코드 자동 부여 -->

<!-- 창고 추가 -->
<insert id="whInsert">
  INSERT INTO
  		<choose>
    		<when test='type == "P"'>
      		warehouse (wh_code, wh_name, wh_type, wh_location, wh_phone, 
      		wh_status, prod_code, raw_code, emp_num, wh_note)
      		
      		VALUES(#{wh_code}, #{wh_name}, #{wh_type}, #{wh_location}, #{wh_phone}, 
      		#{wh_status}, #{prod_code}, #{raw_code}, #{emp_num}, #{wh_note})
    		</when>
    		<when test='type == "R"'>
      		warehouse (wh_code, wh_name, wh_type, wh_location, wh_phone, 
      		wh_status, prod_code, raw_code, emp_num, wh_note)
      		
      		VALUES(#{wh_code}, #{wh_name}, #{wh_type}, #{wh_location}, #{wh_phone}, 
      		#{wh_status}, #{prod_code}, #{raw_code}, #{emp_num}, #{wh_note})
    		</when>
  		</choose>
  </insert>
<!-- 창고 추가 -->
  
  
<!-- 창고 삭제 -->
<delete id="whDelete" parameterType="java.util.List">
    <foreach collection="list" item="item" separator=";">
        <choose>
            <when test='item.type == "P"'>
                DELETE FROM warehouse WHERE wh_code = #{item.code}
            </when>
            <when test='item.type == "R"'>
                DELETE FROM warehouse WHERE wh_code = #{item.code}
            </when>
        </choose>
    </foreach>
 </delete>
 
<!-- 창고 삭제 -->

<!-- 창고 검색 -->
<!-- LIKE 연산자와 함께 사용될 때 와일드카드(%)를 포함한 문자열 검색을 수행할 수 있습니다.  -->
<select id="whSearch" resultType="ems.icemile.dto.WareHouseDTO">
 	<bind name="content" value="'%' + content + '%'"/>
 	SELECT *
	FROM warehouse AS myTable
	WHERE myTable.${category} LIKE #{content}
 </select>
<!-- 창고 검색 -->
  
  </mapper>
  