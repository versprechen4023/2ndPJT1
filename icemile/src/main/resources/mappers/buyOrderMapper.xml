<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ems.icemile.mappers.buyOrderMapper">

 <select id="getNewRawOrderCode" resultType="java.lang.String">
  	SELECT raw_order_code
  		FROM raw_order
  			ORDER BY raw_order_code desc
  				LIMIT 1
 </select>
 
 <insert id="rawOrderInsert">
 	INSERT INTO raw_order(raw_order_code, buy_name, raw_name, raw_order_amount, raw_order_date, in_plan_date, raw_status, emp_num)
 		VALUES(#{raw_order_code}, #{buy_name}, #{raw_name}, #{raw_order_amount}, #{raw_order_date}, #{in_plan_date}, #{raw_status}, #{emp_num})
 </insert>
 
 <select id="getRawOrderList" resultType="ems.icemile.dto.RowOrderListDTO">
 	SELECT o.raw_order_code, r.raw_code, r.raw_name, r.raw_type,
	    	b.buy_code, b.buy_name, o.raw_order_amount, r.raw_price,
        	o.raw_order_date, o.in_plan_date, o.raw_status, o.emp_num
				FROM raw_order o JOIN raw_material r
					ON (o.raw_name = r.raw_name)
						JOIN buy b
							ON (o.buy_name = b.buy_name)
								ORDER BY o.raw_order_code DESC
 </select>
 
 <delete id="rawOrderDelete" parameterType="java.util.List">
	DELETE FROM raw_order
		WHERE raw_order_code IN 
			 <foreach collection="list" item="raw_order_code" open="(" separator="," close=")">
			  	#{raw_order_code}
			 </foreach>
 </delete>

 <update id="rawOrderUpdate">
 	UPDATE raw_order
 		SET raw_order_amount = #{raw_order_amount}, in_plan_date = #{in_plan_date}, raw_status = #{raw_status}
 			WHERE raw_order_code = #{raw_order_code}
 </update>
 
 <select id="rawOrderSearch" resultType="ems.icemile.dto.RowOrderListDTO">
 <bind name="content" value="'%' + content + '%'"/>
  	SELECT o.raw_order_code, r.raw_code, r.raw_name, r.raw_type,
	    	b.buy_code, b.buy_name, o.raw_order_amount, r.raw_price,
        	o.raw_order_date, o.in_plan_date, o.raw_status, o.emp_num
				FROM raw_order o LEFT OUTER JOIN raw_material r
					ON (o.raw_name = r.raw_name)
						LEFT OUTER JOIN buy b
							ON (o.buy_name = b.buy_name)
								<where>
									<if test="status != null and status != ''">
										AND o.raw_status = #{status}
									</if>
									<if test="content != null and content != ''">
										AND r.raw_name LIKE #{content}
									</if>
									<if test="rawOrderBegin != null and rawOrderBegin != '' and rawOrderEnd != null and rawOrderEnd != ''">
            							AND o.raw_order_date BETWEEN #{rawOrderBegin} AND #{rawOrderEnd}
        							</if>
        							<if test="rawOrderBegin != null and rawOrderBegin != '' and rawOrderEnd == null and rawOrderEnd == ''">
            							AND o.raw_order_date >= #{rawOrderBegin}
        							</if>
        							<if test="rawOrderInBegin != null and rawOrderInBegin != '' and rawOrderInEnd != null and rawOrderInEnd != ''">
            							AND o.in_plan_date BETWEEN #{rawOrderInBegin} AND #{rawOrderInEnd}
        							</if>
        							<if test="rawOrderInBegin != null and rawOrderInBegin != '' and rawOrderInEnd == null and rawOrderInEnd == ''">
            							AND o.in_plan_date >= #{rawOrderInBegin}
        							</if>
								</where>
										ORDER BY o.raw_order_code DESC
 </select>
 

 <select id="getRawOrderListPopUp" resultType="ems.icemile.dto.RowOrderListDTO">
 	SELECT *
 	FROM raw_order
 </select>
 
 
</mapper>